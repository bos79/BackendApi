// <auto-generated />
using BackendApi.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackendApi.Migrations
{
    [DbContext(typeof(GridInfoContext))]
    [Migration("20230601211419_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("BackendApi.Entities.Cordinates", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Col")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GridId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Row")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GridId");

                    b.ToTable("Cells");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Col = 0,
                            GridId = 1,
                            Row = 0,
                            Status = "OK"
                        },
                        new
                        {
                            Id = 2,
                            Col = 1,
                            GridId = 1,
                            Row = 0,
                            Status = "OK"
                        },
                        new
                        {
                            Id = 3,
                            Col = 2,
                            GridId = 1,
                            Row = 0,
                            Status = "Orörd"
                        },
                        new
                        {
                            Id = 4,
                            Col = 3,
                            GridId = 1,
                            Row = 0,
                            Status = "Error"
                        },
                        new
                        {
                            Id = 5,
                            Col = 4,
                            GridId = 1,
                            Row = 0,
                            Status = "OK"
                        },
                        new
                        {
                            Id = 6,
                            Col = 5,
                            GridId = 1,
                            Row = 0,
                            Status = "Orörd"
                        },
                        new
                        {
                            Id = 7,
                            Col = 0,
                            GridId = 1,
                            Row = 1,
                            Status = "OK"
                        });
                });

            modelBuilder.Entity("BackendApi.Entities.Grid", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Grids");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Sample grid",
                            Name = "Grid1"
                        },
                        new
                        {
                            Id = 2,
                            Description = "bra",
                            Name = "Grid2"
                        },
                        new
                        {
                            Id = 3,
                            Description = "udda",
                            Name = "Grid3"
                        });
                });

            modelBuilder.Entity("BackendApi.Entities.Cordinates", b =>
                {
                    b.HasOne("BackendApi.Entities.Grid", "Grid")
                        .WithMany()
                        .HasForeignKey("GridId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grid");
                });
#pragma warning restore 612, 618
        }
    }
}
